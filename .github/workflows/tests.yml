name: tests

on:
    push:

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

env:
    MEMCACHED: localhost:11211

jobs:
    tests:
        name: Tests
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
        steps:
            - uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Install GNAT Pro
              uses: ./contrib/RecordFlux/.github/actions/install_gnat_pro
              with:
                  version: "23.0w-20220508"
                  ssh_key: ${{ secrets.MEMCACHED_SSH_KEY }}
                  server: ${{ secrets.MEMCACHED_SERVER }}
            - name: Install GNAT Pro (ARM)
              uses: ./contrib/RecordFlux/.github/actions/install_gnat_pro
              with:
                  version: "23.0w-20220508"
                  target: "arm-elf"
                  host_arch: "linux64"
                  ssh_key: ${{ secrets.MEMCACHED_SSH_KEY }}
                  server: ${{ secrets.MEMCACHED_SERVER }}
            - name: Install GNAT Pro (RISC-V 64)
              uses: ./contrib/RecordFlux/.github/actions/install_gnat_pro
              with:
                  version: "23.0w-20220508"
                  target: "riscv64-elf"
                  host_arch: "linux64"
                  ssh_key: ${{ secrets.MEMCACHED_SSH_KEY }}
                  server: ${{ secrets.MEMCACHED_SERVER }}
            - name: Install SPARK Pro
              uses: ./contrib/RecordFlux/.github/actions/install_spark_pro
              with:
                  version: "23.0w-20220128"
                  ssh_key: ${{ secrets.MEMCACHED_SSH_KEY }}
                  server: ${{ secrets.MEMCACHED_SERVER }}
            - name: Connect to Memcached server
              shell: bash
              env:
                SSH_KEY: ${{ secrets.MEMCACHED_SSH_KEY }}
                SERVER: ${{ secrets.MEMCACHED_SERVER }}
              run: |
                eval $(ssh-agent -s)
                echo "$SSH_KEY" | tr -d '\r' | ssh-add - &>/dev/null
                mkdir -p ~/.ssh
                chmod 700 ~/.ssh
                ssh-keyscan $SERVER >> ~/.ssh/known_hosts
                chmod 644 ~/.ssh/known_hosts
                ssh -L 11211:localhost:11211 -N -T -f -o ExitOnForwardFailure=yes -o ServerAliveInterval=10 -o ServerAliveCountMax=3 ci@$SERVER &>/dev/null
                echo "stats" | nc -q 1 localhost 11211
            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y expect python python3-dev python3-setuptools
                  echo "/canary (for systems using strange)/paths" >> $GITHUB_PATH
            - name: Test
              env:
                SPDM_IGNORE_CHALLENGE_AUTH: 1
                SPDM_IGNORE_MEASUREMENTS_SIGNATURE: 1
                SPDM_IGNORE_KEY_EX_OPAQUE_DATA: 1
                SPDM_IGNORE_KEY_EX_SIGNATURE: 1
                SPDM_IGNORE_KEY_EX_HMAC: 1
                SPDM_IGNORE_FINISH_HMAC: 1
              run: make
            - name: Check spec (all features off)
              env:
                FEATURE_CHALLENGE_AUTH: False
                FEATURE_KEY_EXCHANGE: False
                FEATURE_RESPOND_IF_READY: False
              run: make check_spec
