project Build_Lib
is
   type Target_Type is ("arm", "riscv32", "riscv64");
   Target_Arch : Target_Type := external ("TARGET");

   type Boolean is ("True", "False");
   Check_Stack : Boolean := external ("CHECK_STACK", "False");

   Stack_Check_Path := "";
   case Check_Stack is
      when "True" =>
         Stack_Check_Path := "/gnatstack";
      when "False" =>
         null;
   end case;

   for Library_Name use "responder";
   for Library_Kind use "static";
   Build_Dir := "../build/" & Target_Arch & Stack_Check_Path;
   for Object_Dir use Build_Dir & "/example";
   for Library_Dir use Build_Dir & "/examplelib";
   for Library_Standalone use "standard";
   for Library_Interface use ("responder", "responder_multiple_responders", "responder_select");

   for Languages use ("Ada", "C");
   for Source_Dirs use ("src", "platform", "../build/generated", "../include");

   for Create_Missing_Dirs use "True";
   for Target use Target_Arch & "-elf";
   case Target_Arch is
      when "arm" =>
         for Runtime ("Ada") use "light-stm32f4";
      when "riscv32" =>
         for Runtime ("Ada") use "light-hifive1";
      when "riscv64" =>
         for Runtime ("Ada") use "light-spike";
      when others =>
         null;
   end case;

   package Compiler is
      for Default_Switches ("C") use ("-W", "-Wall", "-Wextra", "-Werror", "-Wstrict-prototypes", "-Wmissing-prototypes");
      for Default_Switches ("Ada") use (
         "-ffunction-sections",
         "-fdata-sections",
         "-Os",
         "-gnatp",
         "-gnatd.8"
      );
   end Compiler;

   package Builder is
      for Global_Configuration_Pragmas use "../pragmas.adc";
   end Builder;

   package Prove is
      for Proof_Switches ("responder.adb") use ("--prover=cvc4,z3,altergo", "--steps=3500");
      for Proof_Switches ("responder_multiple_responders.adb") use ("--prover=cvc4,z3,altergo", "--steps=4600");
      for Proof_Switches ("responder_select.adb") use ("--prover=cvc4,z3,altergo", "--steps=6800");
   end Prove;

end Build_Lib;
